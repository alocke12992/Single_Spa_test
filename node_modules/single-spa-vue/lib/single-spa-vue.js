'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = singleSpaReact;
var defaultOpts = {
	// required opts
	Vue: null,
	appOptions: null,
	template: null
};

function singleSpaReact(userOpts) {
	if ((typeof userOpts === 'undefined' ? 'undefined' : _typeof(userOpts)) !== 'object') {
		throw new Error('single-spa-vue requires a configuration object');
	}

	var opts = _extends({}, defaultOpts, userOpts);

	if (!opts.Vue) {
		throw new Error('single-spa-vuejs must be passed opts.Vue');
	}

	if (!opts.appOptions) {
		throw new Error('single-spa-vuejs must be passed opts.appOptions');
	}

	// Just a shared object to store the mounted object state
	var mountedInstances = {};

	return {
		bootstrap: bootstrap.bind(null, opts, mountedInstances),
		mount: mount.bind(null, opts, mountedInstances),
		unmount: unmount.bind(null, opts, mountedInstances)
	};
}

function bootstrap(opts) {
	return Promise.resolve();
}

function mount(opts, mountedInstances) {
	return new Promise(function (resolve, reject) {
		mountedInstances.instance = new opts.Vue(opts.appOptions);
		if (mountedInstances.instance.bind) {
			mountedInstances.instance = mountedInstances.instance.bind(mountedInstances.instance);
		}
		resolve();
	});
}

function unmount(opts, mountedInstances) {
	return new Promise(function (resolve, reject) {
		mountedInstances.instance.$destroy();
		mountedInstances.instance.$el.innerHTML = '';
		delete mountedInstances.instance;
		resolve();
	});
}
//# sourceMappingURL=single-spa-vue.js.map