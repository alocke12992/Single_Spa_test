{"version":3,"sources":["../src/single-spa-vue.js"],"names":["singleSpaReact","defaultOpts","Vue","appOptions","template","userOpts","Error","opts","mountedInstances","bootstrap","bind","mount","unmount","Promise","resolve","reject","instance","$destroy","$el","innerHTML"],"mappings":";;;;;;;;;;kBAOwBA,c;AAPxB,IAAMC,cAAc;AACnB;AACAC,MAAK,IAFc;AAGnBC,aAAY,IAHO;AAInBC,WAAU;AAJS,CAApB;;AAOe,SAASJ,cAAT,CAAwBK,QAAxB,EAAkC;AAChD,KAAI,QAAOA,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;AACjC,QAAM,IAAIC,KAAJ,kDAAN;AACA;;AAED,KAAMC,oBACFN,WADE,EAEFI,QAFE,CAAN;;AAKA,KAAI,CAACE,KAAKL,GAAV,EAAe;AACd,QAAM,IAAII,KAAJ,CAAU,0CAAV,CAAN;AACA;;AAED,KAAI,CAACC,KAAKJ,UAAV,EAAsB;AACrB,QAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;AACA;;AAED;AACA,KAAIE,mBAAmB,EAAvB;;AAEA,QAAO;AACNC,aAAWA,UAAUC,IAAV,CAAe,IAAf,EAAqBH,IAArB,EAA2BC,gBAA3B,CADL;AAENG,SAAOA,MAAMD,IAAN,CAAW,IAAX,EAAiBH,IAAjB,EAAuBC,gBAAvB,CAFD;AAGNI,WAASA,QAAQF,IAAR,CAAa,IAAb,EAAmBH,IAAnB,EAAyBC,gBAAzB;AAHH,EAAP;AAKA;;AAED,SAASC,SAAT,CAAmBF,IAAnB,EAAyB;AACxB,QAAOM,QAAQC,OAAR,EAAP;AACA;;AAED,SAASH,KAAT,CAAeJ,IAAf,EAAqBC,gBAArB,EAAuC;AACtC,QAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCP,mBAAiBQ,QAAjB,GAA4B,IAAIT,KAAKL,GAAT,CAAaK,KAAKJ,UAAlB,CAA5B;AACE,MAAIK,iBAAiBQ,QAAjB,CAA0BN,IAA9B,EAAoC;AAClCF,oBAAiBQ,QAAjB,GAA4BR,iBAAiBQ,QAAjB,CAA0BN,IAA1B,CAA+BF,iBAAiBQ,QAAhD,CAA5B;AACD;AACHF;AACA,EANM,CAAP;AAOA;;AAED,SAASF,OAAT,CAAiBL,IAAjB,EAAuBC,gBAAvB,EAAyC;AACxC,QAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCP,mBAAiBQ,QAAjB,CAA0BC,QAA1B;AACAT,mBAAiBQ,QAAjB,CAA0BE,GAA1B,CAA8BC,SAA9B,GAA0C,EAA1C;AACA,SAAOX,iBAAiBQ,QAAxB;AACAF;AACA,EALM,CAAP;AAMA","file":"single-spa-vue.js","sourcesContent":["const defaultOpts = {\n\t// required opts\n\tVue: null,\n\tappOptions: null,\n\ttemplate: null,\n}\n\nexport default function singleSpaReact(userOpts) {\n\tif (typeof userOpts !== 'object') {\n\t\tthrow new Error(`single-spa-vue requires a configuration object`);\n\t}\n\n\tconst opts = {\n\t\t...defaultOpts,\n\t\t...userOpts,\n\t};\n\n\tif (!opts.Vue) {\n\t\tthrow new Error('single-spa-vuejs must be passed opts.Vue');\n\t}\n\n\tif (!opts.appOptions) {\n\t\tthrow new Error('single-spa-vuejs must be passed opts.appOptions');\n\t}\n\n\t// Just a shared object to store the mounted object state\n\tlet mountedInstances = {};\n\n\treturn {\n\t\tbootstrap: bootstrap.bind(null, opts, mountedInstances),\n\t\tmount: mount.bind(null, opts, mountedInstances),\n\t\tunmount: unmount.bind(null, opts, mountedInstances),\n\t};\n}\n\nfunction bootstrap(opts) {\n\treturn Promise.resolve();\n}\n\nfunction mount(opts, mountedInstances) {\n\treturn new Promise((resolve, reject) => {\n\t\tmountedInstances.instance = new opts.Vue(opts.appOptions);\n    if (mountedInstances.instance.bind) {\n      mountedInstances.instance = mountedInstances.instance.bind(mountedInstances.instance);\n    }\n\t\tresolve();\n\t});\n}\n\nfunction unmount(opts, mountedInstances) {\n\treturn new Promise((resolve, reject) => {\n\t\tmountedInstances.instance.$destroy();\n\t\tmountedInstances.instance.$el.innerHTML = '';\n\t\tdelete mountedInstances.instance;\n\t\tresolve();\n\t});\n}\n"]}